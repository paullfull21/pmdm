package com.dam.pmdm.resultadosuma;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends Activity {
	
	//Declaro las referencias a los botones de suma y resta.
	private Button botonSuma, botonResta;
	//Declaraciónd de los EditText: operando 1, operando 2 y resultado
	private EditText opUno, opDos, resultOp;
	
	//Declaro 2 variables estáticas que utilizaré como testigos
	//en el lanzamiento de los Activities.
	private static final int SUBACTIVITY_SUMADOR = 1;
	private static final int SUBACTIVITY_RESTADOR = 2;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        botonSuma = (Button) findViewById(R.id.buttonSuma);
        botonResta = (Button) findViewById(R.id.buttonResta);
        
        // Controlo el evento click del botón de suma
        botonSuma.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				Intent intent = new Intent(MainActivity.this, SumadorActivity.class); 
				//Al intent que lanza la actividad, le pasamos como parámetros
				// los valores del operando 1 y del operando 2.
				intent.putExtra("opUno", opUno.getText());
				intent.putExtra("opDos", opDos.getText());
				
				//En este método a diferencia del startActivity, además del
				//intent que define la actividad que será lanzada, le pasamos
				//como parámetro el testigo que me permita reconocer a la 
				//actividad cuando está devuelva un resultado.
				startActivityForResult(intent, SUBACTIVITY_SUMADOR);
			}
		});
        
        // Controlo el evento click del botón de resta
        botonResta.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				opUno = (EditText)findViewById(R.id.operandoUno);
				opDos = (EditText)findViewById(R.id.operandoDos);
				
				Intent intent = new Intent(MainActivity.this, RestadorActivity.class); 
				//Al intent que lanza la actividad, le pasamos como parámetros
				// los valores del operando 1 y del operando 2.
				intent.putExtra("opUno", opUno.getText());
				intent.putExtra("opDos", opDos.getText());
				
				//En este método a diferencia del startActivity, además del
				//intent que define la actividad que será lanzada, le pasamos
				//como parámetro el testigo que me permita reconocer a la 
				//actividad cuando está devuelva un resultado.
				startActivityForResult(intent, SUBACTIVITY_RESTADOR);
			}
		});
    }

    
    //El método onActivityResult recibe:
    //requestCode: el testigo que yo pasé
    //resultCode: resultado correcto (RESULT_OK) o erróneo (RESULT_CANCELED)
    
    @Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    		//
    		if (requestCode == SUBACTIVITY_SUMADOR) { 
    			if (resultCode == RESULT_OK) {
    				int suma = data.getIntExtra("resultadoSuma",0);
    				resultOp = (EditText)findViewById(R.id.resultadoOperacion);
    				resultOp.setText(suma);
    			} else  {
    				Log.e("ERROR","Resultado erróneo");
    			}
    		}
	}



	@Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
}
