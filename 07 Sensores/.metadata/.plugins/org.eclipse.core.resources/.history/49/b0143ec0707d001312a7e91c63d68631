package com.dam.sensoresexamples;

import android.app.Activity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;

public class SensoresActivity extends Activity implements SensorEventListener {

	private SensorManager mSensorManager;
	private Sensor mAccelerometer;
	TextView x,y,z;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_sensores);

		mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
		mAccelerometer = mSensorManager
				.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
		x = (TextView) findViewById(R.id.coordX);
	}

	protected void onResume() {
		super.onResume();
		mSensorManager.registerListener(this, mAccelerometer,
				SensorManager.SENSOR_DELAY_NORMAL);

	}

	protected void onPause() {
		super.onPause();
		mSensorManager.unregisterListener(this);
	}

	/*El metodo onAccuracyChanged() es llamado cuando la precision del sensor cambia, 
	 * mientras que el metodo onSensorChanged() se invoca cuando los valores medidos 
	 * por el sensor cambian.
	*/
	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		switch (sensor.getType()) {
		case Sensor.TYPE_ACCELEROMETER:
			textoAcel.setText("Acelerometro: " + accuracy);
			break;
		}
	}

	@Override
	public void onSensorChanged(SensorEvent event) {
		switch (event.sensor.getType()) {
		case Sensor.TYPE_ACCELEROMETER:
			textoAcel.setText("Acelerometro: " + event.values[0] + ","
					+ event.values[1] + "," + event.values[2]);
			
			// Muestro los valores por el Logcat
			Log.i("ACELEROMETRO", "" + event.values[0] + "," + event.values[1]
					+ "," + event.values[2]);
			break;
		}
	}
}
